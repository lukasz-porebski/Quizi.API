trigger:
- master

resources:
- repo: self

variables:
  githubUser: 'lukasz-porebski'
  repoName: 'quizi-api'
  imageName: 'ghcr.io/$(githubUser)/$(repoName)'
  tag: '$(Build.BuildId)-$(Date:yyyyMMddHHmm)'

stages:
# ===== Etap 1: Build & Test =====
- stage: BuildAndTest
  displayName: Build and Test .NET
  jobs:
  - job: BuildAndTest
    displayName: Build and Test
    pool:
      vmImage: ubuntu-latest
    steps:
    # 1️⃣ Setup .NET SDK
    - task: UseDotNet@2
      displayName: Setup .NET SDK
      inputs:
        packageType: 'sdk'
        version: '9.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    # 2️⃣ Restore dependencies
    - script: dotnet restore --force
      displayName: Restore .NET dependencies

    # 3️⃣ Build project
    - script: dotnet build --configuration Release
      displayName: Build project

    # 4️⃣ Run unit tests
    - script: dotnet test --configuration Release --logger "trx;LogFileName=test_results.trx;LogFailedTestsOnly=true"
      displayName: Run unit tests

    # 5️⃣ Publish test results
    - task: PublishTestResults@2
      displayName: Publish failed test results
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/TestResults/*.trx'
        failTaskOnFailedTests: true

# ===== Etap 2: Build & Push Docker =====
- stage: Docker
  displayName: Build and Push Docker Image
  dependsOn: BuildAndTest
  condition: succeeded()
  jobs:
  - job: Docker
    displayName: Docker Build & Push
    pool:
      vmImage: ubuntu-latest
    steps:
    # 1️⃣ Login do GHCR
    - task: Docker@2
      displayName: Login to GitHub Container Registry
      inputs:
        command: login
        containerRegistry: GitHubConnection

    # 2️⃣ Build Docker image
    - task: Docker@2
      displayName: Build Docker image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(imageName):$(tag)
          $(imageName):latest

    # 3️⃣ Push Docker image
    - task: Docker@2
      displayName: Push Docker image to GHCR
      inputs:
        command: push
        tags: |
          $(imageName):$(tag)
          $(imageName):latest
