// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Modules.Users.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Modules.Users.Models.User", b =>
                {
                    b.OwnsOne("Common.Domain.ValueObjects.AggregateStateChangeInfo", "CreationInto", b1 =>
                        {
                            b1.Property<string>("OwnerId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<DateTime>("At")
                                .HasColumnType("datetime2")
                                .HasColumnName("CreatedAt");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasMaxLength(36)
                                .HasColumnType("nvarchar(36)")
                                .HasColumnName("CreatedByUserId");

                            b1.HasKey("OwnerId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsOne("Common.Domain.ValueObjects.AggregateStateChangeInfo", "RemovalInfo", b1 =>
                        {
                            b1.Property<string>("OwnerId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<DateTime>("At")
                                .HasColumnType("datetime2")
                                .HasColumnName("RemovedAt");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasMaxLength(36)
                                .HasColumnType("nvarchar(36)")
                                .HasColumnName("RemovedByUserId");

                            b1.HasKey("OwnerId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsOne("Common.Domain.ValueObjects.AggregateStateChangeInfo", "UpdateInfo", b1 =>
                        {
                            b1.Property<string>("OwnerId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<DateTime>("At")
                                .HasColumnType("datetime2")
                                .HasColumnName("UpdateAt");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasMaxLength(36)
                                .HasColumnType("nvarchar(36)")
                                .HasColumnName("UpdateByUserId");

                            b1.HasKey("OwnerId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("CreationInto")
                        .IsRequired();

                    b.Navigation("RemovalInfo");

                    b.Navigation("UpdateInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
